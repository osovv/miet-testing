#!/usr/bin/env node
// -*- mode: js -*-
/*
 * Copyright 2016 Joyent, Inc.
 */

var fs = require('fs');
var path = require('path');
var url = require('url');

var bunyan = require('bunyan');
var dashdash = require('dashdash');
var vasync = require('vasync');

var manta = require('../lib');



///--- Globals

var DIR_CT = 'application/x-json-stream; type=directory';
var HAD_ERR = false;
var LOG = bunyan.createLogger({
    name: path.basename(process.argv[1]),
    level: (process.env.LOG_LEVEL || 'info'),
    stream: process.stderr
});
var OPTIONS_PARSER = dashdash.createParser({
    options: manta.DEFAULT_CLI_OPTIONS
});



///--- Functions

function ifError(err) {
    if (err) {
        console.error('mmd5: ' + err.toString());
        process.exit(1);
    }
}


function parseOptions() {
    var opts;

    try {
        opts = OPTIONS_PARSER.parse(process.argv);
        manta.checkBinEnv(opts);
    } catch (e) {
        manta.cli_usage(OPTIONS_PARSER, e.message, 'path...');
    }

    manta.cli_logger(opts, LOG);

    if (opts.help)
        manta.cli_usage(OPTIONS_PARSER, false, 'path...');

    if (opts._args.length < 1)
        manta.cli_usage(OPTIONS_PARSER, 'path required', 'path...');

    opts.parallel = 10;
    opts.paths = opts._args;

    return (opts);
}


function printEntry(p, md5) {
    var _md5 = new Buffer(md5, 'base64');
    console.log(_md5.toString('hex') + '  ' + p);
}


function printError(p, err) {
    HAD_ERR = true;
    var msg = err ? (err.message || err) : '';
    console.error('mmd5: ' + p + ': ' + msg);
}



///--- Mainline

(function main() {
    var options = parseOptions();
    var client = manta.createBinClient(options);
    var queue = new manta.Queue({
        limit: options.parallel,
        worker: function getMD5(p, cb) {
            client.info(p, function (err, info) {
                if (err) {
                    printError(p, err);
                } else if (info.hasOwnProperty('md5')) {
                    printEntry(p, info.md5);
                } else if (info.type === DIR_CT) {
                    printError(p, p + ' is a directory');
                } else {
                    printError(p, 'missing MD5');
                }
                cb();
            });
        }
    });

    queue.once('end', function () {
        process.exit(HAD_ERR ? 1 : 0);
    });

    options.paths.forEach(function (p) {
        ifError(manta.assertPath(p, true));
        queue.push(manta.path(p, true));
    });

    queue.close();
})();
