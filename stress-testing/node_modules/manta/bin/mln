#!/usr/bin/env node
// -*- mode: js -*-
/*
 * Copyright 2016 Joyent, Inc.
 */

var fs = require('fs');
var path = require('path-platform');
var url = require('url');

var bunyan = require('bunyan');
var dashdash = require('dashdash');

var manta = require('../lib');



///--- Globals

var LOG = bunyan.createLogger({
    name: path.basename(process.argv[1]),
    level: (process.env.LOG_LEVEL || 'info'),
    stream: process.stderr
});

var OPTIONS_PARSER = dashdash.createParser({
    options: manta.DEFAULT_CLI_OPTIONS.concat([
        {
            names: ['role-tag'],
            type: 'arrayOfString',
            help: 'role tags to apply to the destination object',
            helpArg: 'TAG,TAG...'
        }
    ])
});



///--- Functions

function ifError(err) {
    if (err) {
        console.error('mln: ' + err.toString());
        process.exit(1);
    }
}


function parseOptions() {
    var opts;

    try {
        opts = OPTIONS_PARSER.parse(process.argv);
        manta.checkBinEnv(opts);
    } catch (e) {
        manta.cli_usage(OPTIONS_PARSER, e.message, 'source dest');
    }

    manta.cli_logger(opts, LOG);

    if (opts.help)
        manta.cli_usage(OPTIONS_PARSER, false, 'source dest');

    if (opts._args.length < 1)
        manta.cli_usage(OPTIONS_PARSER, 'source required', 'source dest');
    if (opts._args.length < 2)
        manta.cli_usage(OPTIONS_PARSER, 'dest required', 'source dest');

    opts.source = path.posix.normalize(opts._args[0]);
    opts.path = path.posix.normalize(opts._args[1]);

    if (opts['role-tag'] && opts['role-tag'].length === 1) {
        /* JSSTYLED */
        opts['role-tag'] = opts['role-tag'][0].split(/\s*,\s*/);
    }

    return (opts);
}



///--- Mainline

(function main() {
    var options = parseOptions();
    var client = manta.createBinClient(options);
    var headers = {
        headers: options.headers || {}
    };

    if (options['role-tag'])
        headers.headers['role-tag'] = options['role-tag'].join(',');

    ifError(manta.assertPath(options.path, true));

    client.ln(options.source, options.path, headers, function (err) {
        ifError(err);

        client.close();
    });
})();
