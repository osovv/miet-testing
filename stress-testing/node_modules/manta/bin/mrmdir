#!/usr/bin/env node
// -*- mode: js -*-
/*
 * Copyright 2016 Joyent, Inc.
 */

var path = require('path');
var url = require('url');

var bunyan = require('bunyan');
var dashdash = require('dashdash');

var manta = require('../lib');



///--- Globals

var LOG = bunyan.createLogger({
    name: path.basename(process.argv[1]),
    level: (process.env.LOG_LEVEL || 'info'),
    stream: process.stderr
});
var OPTIONS_PARSER = dashdash.createParser({
    options: manta.DEFAULT_CLI_OPTIONS
});


///--- Functions

function ifError(err) {
    if (err) {
        console.error('mrmdir: ' + err.toString());
        process.exit(1);
    }
}


function parseOptions() {
    var opts;

    try {
        opts = OPTIONS_PARSER.parse(process.argv);
        manta.checkBinEnv(opts);
    } catch (e) {
        manta.cli_usage(OPTIONS_PARSER, e.message, 'path...');
    }

    manta.cli_logger(opts, LOG);

    if (opts.help)
        manta.cli_usage(OPTIONS_PARSER, false, 'path...');

    if (opts._args.length < 1)
        manta.cli_usage(OPTIONS_PARSER, 'path required', 'path...');

    opts.paths = opts._args.map(function (p) {
        ifError(manta.assertPath(p, true));
        return (manta.path(p, true));
    });

    return (opts);
}


function printEntry(obj) {
    console.log('%j', obj);
}



///--- Mainline

(function main() {
    var options = parseOptions();
    var client = manta.createBinClient(options);
    var i = -1;

    (function rmdir(cb_err) {
        ifError(cb_err);

        var p = options.paths[++i];
        if (!p) {
            client.close();
            return;
        }

        client.info(p, function (err, info) {
            if (err) {
                client.get(p, function (err2) {
                    ifError(err2);
                    // We *shouldn't* ever hit this...
                    ifError(err);
                });
                return;
            }

            if (info.extension !== 'directory') {
                console.error(p + ' is not a directory');
                process.exit(1);
            }

            client.unlink(p, function (err2) {
                ifError(err2);
                process.exit(0);
            });
        });
    })();
})();
