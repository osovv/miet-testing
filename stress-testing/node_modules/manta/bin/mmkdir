#!/usr/bin/env node
// -*- mode: js -*-
/*
 * Copyright 2016 Joyent, Inc.
 */

var path = require('path');
var url = require('url');

var bunyan = require('bunyan');
var dashdash = require('dashdash');

var manta = require('../lib');



///--- Globals

var LOG = bunyan.createLogger({
    name: path.basename(process.argv[1]),
    level: (process.env.LOG_LEVEL || 'info'),
    stream: process.stderr
});

var OPTIONS_PARSER = dashdash.createParser({
    options: manta.DEFAULT_CLI_OPTIONS.concat([
        {
            names: ['header', 'H'],
            type: 'arrayOfString',
            help: 'HTTP headers to include',
            helpArg: 'HEADER'
        },
        {
            names: ['parents', 'p'],
            type: 'bool',
            help: 'no error if existing, make parent directories as needed'
        },
        {
            names: ['role-tag'],
            type: 'arrayOfString',
            help: 'role tags to apply to the created directory',
            helpArg: 'TAG,TAG...'
        }
    ])
});



///--- Functions

function ifError(err) {
    if (err) {
        console.error('mmkdir: ' + err.toString());
        process.exit(1);
    }
}


function parseOptions() {
    var opts;

    try {
        opts = OPTIONS_PARSER.parse(process.argv);
        manta.checkBinEnv(opts);
    } catch (e) {
        manta.cli_usage(OPTIONS_PARSER, e.message, 'path...');
    }

    manta.cli_logger(opts, LOG);

    if (opts.help)
        manta.cli_usage(OPTIONS_PARSER, false, 'path...');

    opts.headers = {};
    (opts.header || []).forEach(function (h) {
        if (h.indexOf(':') === -1) {
            manta.cli_usage(OPTIONS_PARSER,
                            'header must be in the form of "[header]: value"',
                            'path...');
        }
        var tmp = h.split(':');
        opts.headers[tmp[0]] = tmp[1].trim();
    });

    if (opts['role-tag'] && opts['role-tag'].length === 1) {
        /* JSSTYLED */
        opts['role-tag'] = opts['role-tag'][0].split(/\s*,\s*/);
    }

    if (opts._args.length < 1)
        manta.cli_usage(OPTIONS_PARSER, 'path required', 'path...');

    opts.paths = opts._args.map(function (p) {
        ifError(manta.assertPath(p, true));
        return (manta.path(p, true));
    });

    return (opts);
}



///--- Mainline
(function main() {
    var done = 0;
    var options = parseOptions();
    var client = manta.createBinClient(options);
    var headers = {
        headers: options.headers || {}
    };

    if (options['role-tag'])
        headers.headers['role-tag'] = options['role-tag'].join(',');

    function cb(err) {
        ifError(err);

        if (++done === options.paths.length)
            client.close();
    }

    options.paths.forEach(function (p) {
        if (options.parents) {
            client.mkdirp(p, headers, cb);
        } else {
            client.mkdir(p, headers, cb);
        }
    });

})();
